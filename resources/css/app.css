/**
 *
 * Copyright (c) 2020 Alexander Bazhanov
 * https://github.com/bazhanius/
 *
 */

@import url('https://fonts.googleapis.com/css?family=Exo+2:400,600,700&display=swap&subset=cyrillic,cyrillic-ext,latin-ext');
@import url('https://fonts.googleapis.com/css2?family=Baloo+Chettan+2:wght@400;500;600&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400;500;600;700&display=swap');

@media only screen and (orientation : landscape) {
    body {
        --tile-width: 10vh;
    }
}

@media only screen and (orientation : portrait) {
    body {
        --tile-width: 15vw;
    }
}

body {
    font-family: "Baloo Chettan 2", sans-serif;
    --black: #242729;
    --orange: #f48024;
    --green: #5eba7d;
    --yellow: #fbf2d4;
    --red: #d1383d;
    --white: #ece5da;
    --blue: #0095ff;
    --blue-dark: #0077cc;
    width: calc(100% - 0.5px);
    height: calc(100% - 0.5px);
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    box-shadow: inset 0 0 var(--tile-width) calc(var(--tile-width) / 3) rgba(3, 6, 23, 0.1);
    /*background-color: #dff3fa;*/
}

a {
    color: #6a737d;
    text-decoration: none;
}
a:hover, a:focus {
    color: #24292e;
}

.hidden {
    opacity: 0;
}

.game-screen {
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    width: 100%;
    height: 100%;
    border: 0;
    margin: 0;
    padding: 0;
    overflow: hidden;

    perspective: 1000px;
    /*scale: 0.75;*/
    /*perspective-origin: center 5vw;*/
}

.game-metrics {
    display: flex;
    justify-content: space-between;
    font-family: "JetBrains Mono", monospace;
    width: calc(var(--tile-width) * 4);
    color: #373737;
    margin-top: 10px;
}

canvas {
    pointer-events: none;
}

.countdown {
    position: absolute;
    top: 0;
    left: 0;
    display: none;
    justify-content: center;
    align-items: center;
    height: calc(100% - 0.5px);
    width: calc(100% - 0.5px);
    /*background-color: rgba(255, 255, 255, 0.5);*/
    /*overflow: hidden;*/
    /*background: linear-gradient(#fff, transparent);*/

    /*backdrop-filter: blur(2px);*/
    /*backdrop-filter: grayscale(100%) blur(3px);*/
    transform-style: preserve-3d;
    transform: translateZ(10vw);

    animation: shutdown 4s 1 forwards;
}




@keyframes shutdown {
    to {
        visibility: hidden;
    }
}

.tiles-container {
    display: inline-block;
    width: calc(var(--tile-width) * 4);
    height: calc(var(--tile-width) * 4);
    background-color: #171717;
    border-radius: 2px;
    transform-style: preserve-3d;
    transform: rotateX(20deg);
    cursor: grab;
}

.start-position {
    transform: rotateX(35deg) rotateY(-15deg) rotateZ(30deg);
    animation: to-start 60s 1 linear;
}

.end-position {
    animation: to-end 4s 1 linear;
}

@keyframes to-start {
    0%   {transform: rotateX(15deg) rotateY(0) rotateZ(0);}
    100% {transform: rotateX(35deg) rotateY(-15deg) rotateZ(30deg);}
}
@keyframes to-end {
    0%   {transform: rotateX(35deg) rotateY(-15deg) rotateZ(30deg);}
    100% {transform: rotateX(15deg) rotateY(0deg) rotateZ(0deg);}
}
@keyframes rotate {
    0% {
        transform: rotateY(0deg);
    }
    100% {
        transform: rotateY(360deg);
    }
}


.grabbing-cursor {
    cursor: grabbing;
}

.pointer-cursor {
    cursor: pointer;
}

.cube {
    transform-style: preserve-3d;
    transition: background-color 100ms, transform 100ms;
}

.tile {
    width: var(--tile-width);
    height: var(--tile-width);
    position: absolute;
    box-sizing: border-box;
    border-radius: 2px;
    border: 1px solid #171717;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: "JetBrains Mono", monospace;
    font-size: calc(var(--tile-width) / 2.5);
}

.left {
    width: calc(var(--tile-width) / 4);
    transform: translateX(calc(var(--tile-width) * -0.125)) translateZ(calc(var(--tile-width) * 0.125)) rotateY(90deg);
    background-color: goldenrod;
}

.right {
    width: calc(var(--tile-width) / 4);
    transform: translateX(calc(var(--tile-width) * 0.875)) translateZ(calc(var(--tile-width) * 0.125)) rotateY(90deg);
    background-color: goldenrod;
}

.top {
    height: calc(var(--tile-width) / 4);
    transform: translateY(calc(var(--tile-width) * -0.125)) translateZ(calc(var(--tile-width) * 0.125)) rotateX(90deg);
    background-color: gold;
}

.bottom {
    height: calc(var(--tile-width) / 4);
    transform: translateY(calc(var(--tile-width) * 0.875)) translateZ(calc(var(--tile-width) * 0.125)) rotateX(90deg);
    background-color: darkgoldenrod;
}

.front {
    transform: translateZ(calc(var(--tile-width) / 4));
    background: gold;
}



.cube {transform: translateX(5vw)}

.cube-1  {transform: translateX(0) translateY(0);}
.cube-2  {transform: translateX(calc(var(--tile-width))) translateY(0);}
.cube-3  {transform: translateX(calc(var(--tile-width) * 2)) translateY(0);}
.cube-4  {transform: translateX(calc(var(--tile-width) * 3)) translateY(0);}
.cube-5  {transform: translateX(0)  translateY(calc(var(--tile-width)));}
.cube-6  {transform: translateX(calc(var(--tile-width)))  translateY(calc(var(--tile-width)));}
.cube-7  {transform: translateX(calc(var(--tile-width) * 2)) translateY(calc(var(--tile-width)));}
.cube-8  {transform: translateX(calc(var(--tile-width) * 3)) translateY(calc(var(--tile-width)));}
.cube-9  {transform: translateX(0)  translateY(calc(var(--tile-width) * 2));}
.cube-10 {transform: translateX(calc(var(--tile-width)))  translateY(calc(var(--tile-width) * 2));}
.cube-11 {transform: translateX(calc(var(--tile-width) * 2)) translateY(calc(var(--tile-width) * 2));}
.cube-12 {transform: translateX(calc(var(--tile-width) * 3)) translateY(calc(var(--tile-width) * 2));}
.cube-13 {transform: translateX(0)  translateY(calc(var(--tile-width) * 3));}
.cube-14 {transform: translateX(calc(var(--tile-width))) translateY(calc(var(--tile-width) * 3));}
.cube-15 {transform: translateX(calc(var(--tile-width) * 2)) translateY(calc(var(--tile-width) * 3));}


/* Shake animation */

.shake-effect {
    animation: shake-effect 1s cubic-bezier(.36,.07,.19,.97) both;
    transform: translate3d(0, 0, 0) rotateX(10deg);
    backface-visibility: hidden;
    /*perspective: 1000px;*/
}

@keyframes shake-effect {
    10%, 90% {
        transform: translate3d(-1vw, 0, 0) rotateX(10deg);
    }
    20%, 80% {
        transform: translate3d(2vw, 0, 0) rotateX(-40deg);
    }
    30%, 50%, 70% {
        transform: translate3d(-4vw, 0, 0) rotateX(40deg);
    }
    40%, 60% {
        transform: translate3d(4vw, 0, 0) rotateX(10deg);
    }
}

.x-close {
    display: none;
    position: absolute;
    top: 0;
    left: 0;
    margin: calc(var(--tile-width) * .35) 0;
    padding: 0;
}
